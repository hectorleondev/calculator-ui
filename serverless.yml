service: calculator-ui

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  stage: dev
plugins:
  - serverless-scriptable-plugin
  - serverless-s3-sync

custom:
  S3_BUCKET_NAME: calculator-site-react-app
  scriptable:
    hooks:
      before:package:createDeploymentArtifacts:
        - yarn install
        - yarn build
  s3Sync:
    - bucketName: ${self:custom.S3_BUCKET_NAME}
      localDir: build/

resources:
  Resources:
    LoggingBucket:
      Type: AWS::S3::Bucket
      Properties:
        PublicAccessBlockConfiguration:
          BlockPublicAcls: "true"
          BlockPublicPolicy: "true"
          IgnorePublicAcls: "true"
          RestrictPublicBuckets: "true"
        AccessControl: LogDeliveryWrite
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: "AES256"

    StaticFilesS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.S3_BUCKET_NAME}
        Tags:
          - Key: "sc:security:exceptions"
            Value: "block_public_access"
        PublicAccessBlockConfiguration:
          BlockPublicAcls: "false"
          BlockPublicPolicy: "false"
          IgnorePublicAcls: "false"
          RestrictPublicBuckets: "false"
        LoggingConfiguration:
          DestinationBucketName:
            Ref: LoggingBucket
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              MaxAge: 3000
        AccessControl: PublicRead
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: "AES256"
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticFilesS3Bucket
        PolicyDocument:
          Statement:
            - Action:
                - "s3:ListBucket"
              Effect: "Deny"
              Principal: "*"
              Resource:
                - "Fn::Join":
                    - ""
                    - - "arn:aws:s3:::"
                      - Ref: StaticFilesS3Bucket
                      - /*
                - Fn::GetAtt: [ StaticFilesS3Bucket, Arn ]
              Condition:
                Bool:
                  aws:SecureTransport:
                    - "false"
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource:
                Fn::Join:
                  [
                    "",
                    [ "arn:aws:s3:::", { "Ref": "StaticFilesS3Bucket" }, "/*" ],
                  ]

    CloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: !Sub ${AWS::StackName}

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      DependsOn:
        - StaticFilesS3Bucket
      Properties:
        DistributionConfig:
          Origins:
            - ConnectionAttempts: 3
              ConnectionTimeout: 10
              DomainName:
                Fn::GetAtt:
                  - StaticFilesS3Bucket
                  - RegionalDomainName
              Id:
                Ref: StaticFilesS3Bucket
              S3OriginConfig:
                OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
              OriginPath: /my-content
          Enabled: 'true'
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          CacheBehaviors: []
          DefaultCacheBehavior:
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            TargetOriginId:
              Ref: StaticFilesS3Bucket
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            CloudFrontDefaultCertificate: true

  Outputs:
    StaticFilesS3BucketName:
      Value:
        Ref: StaticFilesS3Bucket